name: Release Kpow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of kPow'
        required: true
      manifest:
        description: 'URL of Manifest'
        required: true
      release_number_bump:
        description: 'I have updated system.clj release number!'
        required: true
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check that we have bumped release number
        run: |
          ./scripts/release_number_check.sh ${{github.event.inputs.release_number_bump}}

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Download and verify JAR(s)
        run: |
          ./scripts/jar.sh "${{github.event.inputs.manifest}}"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      -
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build kPow Alpine (EE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-ee
          IMAGE_TAG=$VERSION-alpine
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/alpine/Dockerfile

### EE builds

      - name: Build kPow Red Hat UBI (EE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-ee
          IMAGE_TAG=$VERSION-rh-ubi
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/rh-ubi/Dockerfile

      - name: Build kPow AWS Marketplace LM (EE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-ee
          IMAGE_TAG=$VERSION-aws-mkt-lm
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/aws-mkt-lm/Dockerfile

      - name: Build kPow AWS Marketplace Corp (EE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-ee
          IMAGE_TAG=$VERSION-aws-mkt-corp
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/aws-mkt-corp/Dockerfile

      - name: Build kPow AWS Marketplace Pro (EE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-ee
          IMAGE_TAG=$VERSION-aws-mkt-pro
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/aws-mkt-pro/Dockerfile

      - name: Build kPow AWS Marketplace Team (EE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-ee
          IMAGE_TAG=$VERSION-aws-mkt-team
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/aws-mkt-team/Dockerfile

      - name: Build kPow (JDK17) (EE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-ee
          IMAGE_TAG=$VERSION-jdk17
          ./scripts/build_all.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/jdk17/Dockerfile

      - name: Build kPow (EE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-ee
          IMAGE_TAG=$VERSION
          ./scripts/build_all.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/kpow/Dockerfile

      - name: Build kPow (latest) (EE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-ee
          IMAGE_TAG=latest
          ./scripts/build_all.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/kpow/Dockerfile

### SE builds

      - name: Build kPow Alpine (SE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-se
          IMAGE_TAG=$VERSION-alpine
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/alpine/Dockerfile

      - name: Build kPow Red Hat UBI (SE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-se
          IMAGE_TAG=$VERSION-rh-ubi
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/rh-ubi/Dockerfile

      - name: Build kPow AWS Marketplace LM (SE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-se
          IMAGE_TAG=$VERSION-aws-mkt-lm
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/aws-mkt-lm/Dockerfile

      - name: Build kPow AWS Marketplace Corp (SE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-se
          IMAGE_TAG=$VERSION-aws-mkt-corp
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/aws-mkt-corp/Dockerfile

      - name: Build kPow AWS Marketplace Pro (SE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-se
          IMAGE_TAG=$VERSION-aws-mkt-pro
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/aws-mkt-pro/Dockerfile

      - name: Build kPow AWS Marketplace Team (SE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-se
          IMAGE_TAG=$VERSION-aws-mkt-team
          ./scripts/build_amd64.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/aws-mkt-team/Dockerfile

      - name: Build kPow (JDK17) (SE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-se
          IMAGE_TAG=$VERSION-jdk17
          ./scripts/build_all.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/jdk17/Dockerfile

      - name: Build kPow (SE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-se
          IMAGE_TAG=$VERSION
          ./scripts/build_all.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/kpow/Dockerfile

      - name: Build kPow (latest) (SE)
        run: |
          VERSION=${{github.event.inputs.version}}
          IMAGE_ID=${{ github.repository }}/kpow-se
          IMAGE_TAG=latest
          ./scripts/build_all.sh $VERSION $IMAGE_ID $IMAGE_TAG dockerfile/kpow/Dockerfile


      - name: Install babashka
        run: sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - name: Update releases-ee.edn
        run: ./scripts/release.clj ${{github.event.inputs.num}} releases-ee.edn
      - name: Update releases-v2.edn
        run: ./scripts/release.clj ${{github.event.inputs.num}} releases-v2.edn
      - name: Update dockerhub/kpow-ee/README.md
        run: echo ${{github.event.inputs.num}} | ./scripts/dockerhub_readme_ee.clj
      - name: Update dockerhub/kpow-se/README.md
        run: echo ${{github.event.inputs.num}} | ./scripts/dockerhub_readme_se.clj
      - name: Commit
        run: |
          git config --global user.email "support@operatr.io"
          git config --global user.name "kPow CI"
          git commit -am "Release Enterprise ${{github.event.inputs.num}}"
      - name: Tag
        run: git tag -a ee/${{github.event.inputs.num}} -m "Release Enterprise ${{github.event.inputs.num}}"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}